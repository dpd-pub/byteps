dist: bionic
language: python
cache: pip
python:
  - "2.7"
  - "3.7"
env:
  - CUDA=9.0.176-1 CUDA_APT=9-0 CUDA_SHORT=9.0 UBUNTU_VERSION=ubuntu1604 NCCL=1.0.0-1
before_install:
  - CUDA_REPO=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - NCCL_REPO=nvidia-machine-learning-repo-${UBUNTU_VERSION}_${NCCL}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${CUDA_REPO}
  - sudo dpkg -i ${CUDA_REPO}
  - sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - wget http://developer.download.nvidia.com/compute/machine-learning/repos/${UBUNTU_VERSION}/x86_64/${NCCL_REPO}
  - sudo dpkg -i ${NCCL_REPO}
install:
  - sudo apt update -qq
  - sudo apt install -y cuda libnccl2 libnccl-dev libnuma-dev
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}
  - pip install mxnet-cu90==1.4.1 tensorflow-gpu==1.12.0 torch==1.0.1 torchvision==0.2.2
script:
  - BYTEPS_CUDA_HOME=${CUDA_HOME}
  - update-alternatives --install /usr/bin/gcc gcc $(readlink -f $(which gcc)) 100 && \
    update-alternatives --install /usr/bin/x86_64-linux-gnu-gcc x86_64-linux-gnu-gcc $(readlink -f $(which gcc)) 100 && \
    update-alternatives --install /usr/bin/g++ g++ $(readlink -f $(which g++)) 100 && \
    update-alternatives --install /usr/bin/x86_64-linux-gnu-g++ x86_64-linux-gnu-g++ $(readlink -f $(which g++)) 100
  - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 200 && \
    update-alternatives --install /usr/bin/x86_64-linux-gnu-gcc x86_64-linux-gnu-gcc /usr/bin/gcc-4.9 200 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 200 && \
    update-alternatives --install /usr/bin/x86_64-linux-gnu-g++ x86_64-linux-gnu-g++ /usr/bin/g++-4.9 200
  - python setup.py install
